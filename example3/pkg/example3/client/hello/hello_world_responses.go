// Code generated by go-swagger; DO NOT EDIT.

package hello

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/delivery-club/go-swagger-example/example3/pkg/example3/models"
)

// HelloWorldReader is a Reader for the HelloWorld structure.
type HelloWorldReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelloWorldReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelloWorldOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHelloWorldBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelloWorldInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHelloWorldOK creates a HelloWorldOK with default headers values
func NewHelloWorldOK() *HelloWorldOK {
	return &HelloWorldOK{}
}

/*HelloWorldOK handles this case with default header values.

successful response
*/
type HelloWorldOK struct {
	Payload *models.HelloWorld
}

func (o *HelloWorldOK) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloWorldOK  %+v", 200, o.Payload)
}

func (o *HelloWorldOK) GetPayload() *models.HelloWorld {
	return o.Payload
}

func (o *HelloWorldOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HelloWorld)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloWorldBadRequest creates a HelloWorldBadRequest with default headers values
func NewHelloWorldBadRequest() *HelloWorldBadRequest {
	return &HelloWorldBadRequest{}
}

/*HelloWorldBadRequest handles this case with default header values.

Bad request
*/
type HelloWorldBadRequest struct {
	Payload *models.Error
}

func (o *HelloWorldBadRequest) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloWorldBadRequest  %+v", 400, o.Payload)
}

func (o *HelloWorldBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *HelloWorldBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloWorldInternalServerError creates a HelloWorldInternalServerError with default headers values
func NewHelloWorldInternalServerError() *HelloWorldInternalServerError {
	return &HelloWorldInternalServerError{}
}

/*HelloWorldInternalServerError handles this case with default header values.

Internal server error
*/
type HelloWorldInternalServerError struct {
	Payload *models.Error
}

func (o *HelloWorldInternalServerError) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloWorldInternalServerError  %+v", 500, o.Payload)
}

func (o *HelloWorldInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *HelloWorldInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
